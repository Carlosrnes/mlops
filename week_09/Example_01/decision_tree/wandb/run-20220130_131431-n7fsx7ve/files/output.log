
30-01-2022 13:14:33 Downloading and reading train artifact
30-01-2022 13:14:36 Spliting data into train/val
30-01-2022 13:14:36 x train: (15942, 14)
30-01-2022 13:14:36 y train: (15942,)
30-01-2022 13:14:36 x val: (6833, 14)
30-01-2022 13:14:36 y val: (6833,)
30-01-2022 13:14:36 Removal Outliers
30-01-2022 13:14:36 x_train shape [original]: (15942, 14)
30-01-2022 13:14:36 x_train shape [outlier removal]: (14620, 14)
30-01-2022 13:14:36 Encoding Target Variable
30-01-2022 13:14:36 Classes [0, 1]: [' <=50K' ' >50K']
30-01-2022 13:14:36 Pipeline generation
30-01-2022 13:14:36 Training
30-01-2022 13:14:36 Infering
30-01-2022 13:14:36 Evaluation metrics
30-01-2022 13:14:38 Uploading figures
/Users/ivanovitchsilva/opt/anaconda3/envs/mlflow-521646bdb8ef773b1f4c4ec0a73df68c0c121729/lib/python3.8/site-packages/mlflow/models/signature.py:123: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input)
[34m[1mwandb[39m[22m: Adding directory to artifact (/var/folders/y1/07xj9gnx39l066v29fqxzyy80000gn/T/tmpxxraun1o/model_export)... Done. 0.0s
Traceback (most recent call last):
  File "run.py", line 402, in <module>
    process_args(ARGS)
  File "run.py", line 311, in process_args
    export_model(run, pipe, x_val, predict, args.export_artifact)
  File "run.py", line 346, in export_model
    artifact.wait()
  File "/Users/ivanovitchsilva/opt/anaconda3/envs/mlflow-521646bdb8ef773b1f4c4ec0a73df68c0c121729/lib/python3.8/site-packages/wandb/sdk/wandb_artifacts.py", line 629, in wait
    return self._logged_artifact.wait()
  File "/Users/ivanovitchsilva/opt/anaconda3/envs/mlflow-521646bdb8ef773b1f4c4ec0a73df68c0c121729/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 2882, in wait
    resp = self._future.get().response.log_artifact_response
  File "/Users/ivanovitchsilva/opt/anaconda3/envs/mlflow-521646bdb8ef773b1f4c4ec0a73df68c0c121729/lib/python3.8/site-packages/wandb/sdk/interface/router.py", line 37, in get
    is_set = self._object_ready.wait(timeout)
  File "/Users/ivanovitchsilva/opt/anaconda3/envs/mlflow-521646bdb8ef773b1f4c4ec0a73df68c0c121729/lib/python3.8/threading.py", line 558, in wait
    signaled = self._cond.wait(timeout)
  File "/Users/ivanovitchsilva/opt/anaconda3/envs/mlflow-521646bdb8ef773b1f4c4ec0a73df68c0c121729/lib/python3.8/threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt