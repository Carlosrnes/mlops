
26-01-2022 21:31:33 Downloading and reading train artifact
26-01-2022 21:31:35 Spliting data into train/val
26-01-2022 21:31:36 x train: (15942, 14)
26-01-2022 21:31:36 y train: (15942,)
26-01-2022 21:31:36 x val: (6833, 14)
26-01-2022 21:31:36 y val: (6833,)
26-01-2022 21:31:36 Removal Outliers
26-01-2022 21:31:36 x_train shape [original]: (15942, 14)
26-01-2022 21:31:36 x_train shape [outlier removal]: (14668, 14)
26-01-2022 21:31:36 Encoding Target Variable
26-01-2022 21:31:36 Classes [0, 1]: [' <=50K' ' >50K']
26-01-2022 21:31:36 Pipeline generation
26-01-2022 21:31:36 Training
26-01-2022 21:31:36 Infering
26-01-2022 21:31:36 Evaluation metrics
26-01-2022 21:31:41 Uploading figures
/Users/ivanovitchsilva/opt/anaconda3/envs/mlflow-e01e020d83ac2809652cfc6bbd5aa3331ef29447/lib/python3.8/site-packages/mlflow/models/signature.py:123: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input)
Traceback (most recent call last):
  File "run.py", line 372, in <module>
    process_args(ARGS)
  File "run.py", line 309, in process_args
    export_model(run, pipe, x_val, predict, args.export_artifact)
  File "run.py", line 319, in export_model
    export_path = os.path.join(temp_dir, "model_export")
NameError: name 'os' is not defined